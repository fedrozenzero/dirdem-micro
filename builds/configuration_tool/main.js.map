{"version":3,"sources":["../core/models/typeScript/FuseBit.ts","../core/models/typeScript/GptDriver.ts","../core/models/typeScript/Microcontroller.ts","../core/models/typeScript/Utilities/ConverterUtilities.ts","../core/models/typeScript/Utilities/ElectronicUtilities.ts","./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/fuse-bit/fuse-bit.component.html","./src/app/components/gpt-config/gpt-config.component.html","./src/app/components/home/home.component.html","./src/app/components/micro-pinout-dialog/micro-pinout-dialog.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/fuse-bit/fuse-bit.component.css","./src/app/components/fuse-bit/fuse-bit.component.ts","./src/app/components/gpt-config/gpt-config.component.css","./src/app/components/gpt-config/gpt-config.component.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.ts","./src/app/components/micro-pinout-dialog/micro-pinout-dialog.component.css","./src/app/components/micro-pinout-dialog/micro-pinout-dialog.component.ts","./src/app/modules/material/material.module.ts","./src/app/services/driver.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ConverterUtilities } from './Utilities/ConverterUtilities'\r\n\r\nexport class Fuse {\r\n  hexValue: string;\r\n  type: FusesType;\r\n  bits: FuseBit [];\r\n}\r\n\r\nexport interface FuseBit {\r\n  label: FuseBitLabel;\r\n  value: boolean;\r\n}\r\n\r\nexport enum FusesType {\r\n  LOW = \"LOW\",\r\n  HIGH = \"HIGH\",\r\n  EXTENDED = \"EXTENDED\",\r\n  LOCKBIT = \"LOCKBIT\"\r\n}\r\n\r\nexport enum FuseBitLabel {\r\n  CKSEL0 = \"CKSEL0\",\r\n  CKSEL1 = \"CKSEL1\",\r\n  CKSEL2 = \"CKSEL2\",\r\n  CKSEL3 = \"CKSEL3\",\r\n  SUT0 = \"SUT0\",\r\n  SUT1 = \"SUT1\",\r\n  CKOUT = \"CKOUT\",\r\n  BOOTRST = \"BOOTRST\",\r\n  BOOTSZ0 = \"BOOTSZ0\",\r\n  BOOTSZ1 = \"BOOTSZ1\",\r\n  EESAVE = \"EESAVE\",\r\n  WDTON = \"WDTON\",\r\n  SPIEN = \"SPIEN\",\r\n  DWEN = \"DWEN\",\r\n  CKDIV8 = \"CKDIV8\",\r\n  BODLEVEL0 = \"BODLEVEL0\",\r\n  BODLEVEL1 = \"BODLEVEL1\",\r\n  BODLEVEL2 = \"BODLEVEL2\",\r\n  RSTDISBL = \"RSTDISBL\",\r\n  Bit0 = \"Bit0\",\r\n  Bit1 = \"Bit1\",\r\n  Bit2 = \"Bit2\",\r\n  Bit3 = \"Bit3\",\r\n  Bit4 = \"Bit4\",\r\n  Bit5 = \"Bit5\",\r\n  Bit6 = \"Bit6\",\r\n  Bit7 = \"Bit7\"\r\n}","export class GptDriverConfig {\n    gptChannelID: number;\n    gptContainerHwChannel: string;\n    gptContainerClockReference: string;\n    gptClockPrescaler: number;\n    gptChannelTickValueMax: number;\n    gptNotification: string;\n  }\n\n  export class ATmega328Values {\n    get gptChannelIdValues() { return [0, 1, 2] };\n    get gptContainerHwChannelValues() { return ['TMR0', 'TMR1', 'TMR2'] };\n    get gptContainerClockReferenceValues() { return ['SYS_CLK', 'EXT_CLK'] };\n    get gptClockPrescalerValues() { return [0, 8, 64, 256, 1024]};\n    get gptChannelTickValues() { return [255, 65535] };\n  }\n\n","import { ElelectronicMemory, MemoryUnitMeasures, VoltageUnitMeasures, Voltage, FrequencyUnitMeasure, ElectronicOscillator, OscillatorMaterial, OscillatorType } from './Utilities/ElectronicUtilities';\r\nimport { FusesType, Fuse, FuseBitLabel } from './FuseBit';\r\n\r\nexport class Microcontroller {\r\n    name: string;\r\n    brand: MicroBrand;\r\n    family: MicroFamily;\r\n    pins: number;\r\n    datasheet: string;\r\n    imageSrc: string;\r\n    pinoutImageSrc: string;\r\n    ram: ElelectronicMemory;\r\n    sram: ElelectronicMemory;\r\n    flash: ElelectronicMemory;\r\n    eprom: ElelectronicMemory;\r\n    dataBus: ElelectronicMemory;\r\n    minVoltage: Voltage;\r\n    maxVoltage: Voltage;\r\n    totalTimers: number;\r\n    internalOscillator: ElectronicOscillator;\r\n    fuses: Fuse[];                              // dall'ultimo al primo\r\n\r\n    static getMicrocontrollers(): Microcontroller[] {\r\n        return ALL_MICROS;\r\n    }\r\n}\r\n\r\nenum MicroFamily {\r\n    AVR = \"AVR\"\r\n}\r\n\r\nenum MicroBrand {\r\n    Atmel = \"Atmel\"\r\n}\r\n\r\nexport const ALL_MICROS: Microcontroller[] =\r\n    [\r\n        {\r\n            name: \"ATMega328p\",\r\n            brand: MicroBrand.Atmel,\r\n            family: MicroFamily.AVR,\r\n            pins: 28,\r\n            datasheet: \"http://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-7810-Automotive-Microcontrollers-ATmega328P_Datasheet.pdf\",\r\n            imageSrc: \"assets/images/ATMega328.png\",\r\n            pinoutImageSrc: \"assets/images/ATMega328pinout.png\",\r\n            ram: { size: 8, measureUnit: MemoryUnitMeasures.Kilobytes },\r\n            sram: { size: 2048, measureUnit: MemoryUnitMeasures.Bytes },\r\n            flash: { size: 32, measureUnit: MemoryUnitMeasures.Kilobytes },\r\n            eprom: { size: 1024, measureUnit: MemoryUnitMeasures.Bytes },\r\n            dataBus: { size: 8, measureUnit: MemoryUnitMeasures.Bit },\r\n            minVoltage: { value: 1.8, measureUnit: VoltageUnitMeasures.V },\r\n            maxVoltage: { value: 5.5, measureUnit: VoltageUnitMeasures.V },\r\n            totalTimers: 3,\r\n            internalOscillator: { value: 8, measureUnit: FrequencyUnitMeasure.MHz, type: OscillatorType.Crystal, material: OscillatorMaterial.Quartz },\r\n            fuses:\r\n                [\r\n                    {\r\n                        hexValue: '62',\r\n                        type: FusesType.LOW,\r\n                        bits:\r\n                            [\r\n                                { label: FuseBitLabel.CKDIV8, value: false },\r\n                                { label: FuseBitLabel.CKOUT, value: true },\r\n                                { label: FuseBitLabel.SUT1, value: true },\r\n                                { label: FuseBitLabel.SUT0, value: false },\r\n                                { label: FuseBitLabel.CKSEL3, value: false },\r\n                                { label: FuseBitLabel.CKSEL2, value: false },\r\n                                { label: FuseBitLabel.CKSEL1, value: true },\r\n                                { label: FuseBitLabel.CKSEL0, value: false }                        \r\n                            ]\r\n                    },\r\n                    {\r\n                        hexValue: 'D9',\r\n                        type: FusesType.HIGH,\r\n                        bits:\r\n                            [\r\n                                { label: FuseBitLabel.RSTDISBL, value: true },\r\n                                { label: FuseBitLabel.DWEN, value: true },\r\n                                { label: FuseBitLabel.SPIEN, value: false },\r\n                                { label: FuseBitLabel.WDTON, value: true },\r\n                                { label: FuseBitLabel.EESAVE, value: true },\r\n                                { label: FuseBitLabel.BOOTSZ1, value: false },\r\n                                { label: FuseBitLabel.BOOTSZ0, value: false },\r\n                                { label: FuseBitLabel.BOOTRST, value: true }                        \r\n                            ]\r\n                    },\r\n                    {\r\n                        hexValue: 'FF',\r\n                        type: FusesType.EXTENDED,\r\n                        bits:\r\n                            [\r\n                                { label: FuseBitLabel.Bit7, value: true },\r\n                                { label: FuseBitLabel.Bit6, value: true },\r\n                                { label: FuseBitLabel.Bit5, value: true },\r\n                                { label: FuseBitLabel.Bit4, value: true },\r\n                                { label: FuseBitLabel.Bit3, value: true },\r\n                                { label: FuseBitLabel.BODLEVEL2, value: true },\r\n                                { label: FuseBitLabel.BODLEVEL1, value: true },\r\n                                { label: FuseBitLabel.BODLEVEL0, value: true }                        \r\n                            ]\r\n                    },\r\n                    {\r\n                        hexValue: 'FF',\r\n                        type: FusesType.LOCKBIT,\r\n                        bits:\r\n                            [\r\n                                { label: FuseBitLabel.Bit7, value: true },\r\n                                { label: FuseBitLabel.Bit6, value: true },\r\n                                { label: FuseBitLabel.Bit5, value: true },\r\n                                { label: FuseBitLabel.Bit4, value: true },\r\n                                { label: FuseBitLabel.Bit3, value: true },\r\n                                { label: FuseBitLabel.Bit2, value: true },\r\n                                { label: FuseBitLabel.Bit1, value: true },\r\n                                { label: FuseBitLabel.Bit0, value: true }                         \r\n                            ]\r\n                    }                    \r\n                ]\r\n        }\r\n    ]\r\n","export class ConverterUtilities {\r\n    /** converte un numero esadecimale (string) in un numero in base decimale */\r\n    static hexToNumber(hex: string): number {\r\n        return parseInt('0x' + hex);\r\n    }\r\n    /** converte un numero decimale in un numero esadecimale */\r\n    static numberToHex(n: number): string {\r\n        return n.toString(16).toUpperCase();\r\n    }\r\n    /** converte un numero base in decimale (max 255  8-bit) in un array di bit */\r\n    static uint8ToBinaryArray(num: number): boolean[] {\r\n        var result = [];\r\n        for (let i = 0; i < 8; i++) {\r\n            result[i] = (num >> i) & 1;\r\n        }\r\n        return result.map(_ => _ == 1 ? true : false);\r\n    }\r\n    /** converte un array di 8 bit in un numero intero segna segno (max 255) */\r\n    static binaryArraytoUnint8(arr: boolean[]): number {\r\n        var result = 0;\r\n        for (let i = 0; i < 8; i++) {\r\n            if (arr[i] == true) {\r\n                result += Math.pow(2, i);\r\n            }\r\n            else {\r\n                null;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /** converte un numero esadecimale (stringa  max FF) in un array di bit */\r\n    static hexToBinaryArray(hex: string): boolean[] {\r\n        var result = [];\r\n        let decNum = this.hexToNumber(hex);\r\n        result = this.uint8ToBinaryArray(decNum);\r\n        return result;\r\n    }\r\n    /** coverte un array di 8 bit in una numero esadecimale */\r\n    static binaryToHex(arr: boolean[]): string {\r\n        let n = this.binaryArraytoUnint8(arr);\r\n        return this.numberToHex(n);\r\n    }\r\n    /** trasposizione di una matrice, le righe diventano colonne e viceversa */\r\n    static matrixTranspose(a: any[][]) {\r\n        // Calculate the width and height of the Array\r\n        var w = a.length || 0;\r\n        var h = a[0] instanceof Array ? a[0].length : 0;\r\n\r\n        // In case it is a zero matrix, no transpose routine needed.\r\n        if (h === 0 || w === 0) { return []; }\r\n        /**\r\n         * @var {Number} i Counter\r\n         * @var {Number} j Counter\r\n         * @var {Array} t Transposed data is stored in this array.\r\n         */\r\n        var i, j, t = [];\r\n\r\n        // Loop through every item in the outer array (height)\r\n        for (i = 0; i < h; i++) {\r\n            // Insert a new row (array)\r\n            t[i] = [];\r\n            // Loop through every item per item in outer array (width)\r\n            for (j = 0; j < w; j++) {\r\n                // Save transposed data.\r\n                t[i][j] = a[j][i];\r\n            }\r\n        }\r\n        return t;\r\n    }\r\n\r\n}\r\n","export interface ElelectronicMemory {\r\n    size: number;\r\n    measureUnit: MemoryUnitMeasures;\r\n}\r\n\r\nexport interface Voltage {\r\n    value: number;\r\n    measureUnit: VoltageUnitMeasures;\r\n}\r\n\r\nexport interface Frequency {\r\n    value: number;\r\n    measureUnit: FrequencyUnitMeasure;\r\n}\r\n\r\nexport interface ElectronicOscillator extends Frequency{\r\n    type: OscillatorType;\r\n    material: OscillatorMaterial;\r\n}\r\n\r\n\r\n\r\nexport enum MemoryUnitMeasures {\r\n    Bit = \"Bit\",\r\n    Bytes = \"Bytes\",\r\n    Kilobytes = \"Kilobytes\",\r\n    Megabytes = \"Megabytes\",\r\n    Gigabytes = \"Gigabytes\"\r\n}\r\n\r\nexport enum VoltageUnitMeasures {\r\n    uV = \"uV\",\r\n    mV = \"mV\",\r\n    V = \"V\",\r\n    KV = \"KV\"\r\n}\r\n\r\nexport enum FrequencyUnitMeasure {\r\n    Hz = \"Hz\",\r\n    KHz = \"KHz\",\r\n    MHz = \"MHz\",\r\n    GHz = \"GHz\"\r\n}\r\n\r\nexport enum OscillatorType {\r\n    Crystal = \"Crystal\",\r\n    Circuit = \"Circuit\"\r\n}\r\n\r\nexport enum OscillatorMaterial {\r\n    Quartz = \"Quartz\",\r\n    Ceramic = \"Ceramic\"\r\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-home></app-home>\\n<!--gpt-cfg></gpt-cfg-->\\n<router-outlet></router-outlet>\\n\"","export default \"<div id=\\\"legendRow\\\"> <span> Remember: </span> <mat-checkbox [checked]=\\\"true\\\"> = 0 (programmed)</mat-checkbox> <mat-checkbox [checked]=\\\"false\\\"> = 1 (unprogrammed) </mat-checkbox> </div>\\n\\n<table mat-table #table [dataSource]=\\\"dataSource\\\" id=\\\"fuseTable\\\" *ngIf=\\\"displayedColumns.length\\\">\\n\\n  <ng-container *ngFor=\\\"let column of columns;\\\" [cdkColumnDef]=\\\"column.columnDef\\\">\\n    <!-- header -->\\n    <td mat-header-cell *cdkHeaderCellDef [ngClass]=\\\"column.index == 0? 'rowPadding' : 'noRowPadding'\\\">\\n      {{ column.header }} </td>\\n    <!-- celle -->\\n    <td mat-cell *cdkCellDef=\\\"let row\\\">\\n      <mat-checkbox [checked]=\\\"!row[column.index].value\\\" (change)=\\\"onCellClicked(column.columnDef, row[column.index])\\\">\\n        {{ row[column.index].label }} </mat-checkbox>\\n    </td>\\n    <!-- footer -->\\n    <td mat-footer-cell *matFooterCellDef class=\\\"footerCells\\\">\\n      <div class=\\\"flexDisplay\\\"> 0X<input matInput [(ngModel)]=\\\"column.footer\\\"\\n          (ngModelChange)=\\\"onFooterChange($event, column.header)\\\"> </div>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"bolder\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\" class=\\\"bolder\\\"></tr>\\n\\n</table>\"","export default \"<h1 id=\\\"mainTitle\\\" class=\\\"colorText\\\">GPT Driver configuration</h1>\\n<div id=\\\"configContainer\\\">\\n  <div>\\n    <mat-form-field class=\\\"configWidth\\\" appearance=\\\"outline\\\">\\n      <mat-label> Channel ID</mat-label>\\n      <mat-select [(value)]=\\\"config.gptChannelID\\\" #select1>\\n        <mat-option *ngFor=\\\"let channelId of atMega328values.gptChannelIdValues\\\" [value]=\\\"channelId\\\">\\n          {{ channelId }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"configWidth\\\" appearance=\\\"outline\\\">\\n      <mat-label>HW Channel</mat-label>\\n      <mat-select [(value)]=\\\"config.gptContainerHwChannel\\\" (selectionChange)=\\\"onHwSelectionChange($event)\\\" #select2>\\n        <mat-option *ngFor=\\\"let hwChannel of atMega328values.gptContainerHwChannelValues\\\" [value]=\\\"hwChannel\\\">\\n          {{ hwChannel }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n\\n  <div>\\n    <mat-form-field class=\\\"configWidth\\\" appearance=\\\"outline\\\">\\n      <mat-label>Clock reference</mat-label>\\n      <mat-select [(value)]=\\\"config.gptContainerClockReference\\\" #select3>\\n        <mat-option *ngFor=\\\"let clockReference of atMega328values.gptContainerClockReferenceValues\\\"\\n          [value]=\\\"clockReference\\\">\\n          {{ clockReference }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"configWidth\\\" appearance=\\\"outline\\\">\\n        <mat-label>Clock prescaler</mat-label>\\n        <mat-select [(value)]=\\\"config.gptClockPrescaler\\\" #select4>\\n          <mat-option *ngFor=\\\"let clockPrescaler of atMega328values.gptClockPrescalerValues\\\"\\n            [value]=\\\"clockPrescaler\\\">\\n            {{ clockPrescaler }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n  </div>\\n\\n  <div>\\n    <mat-form-field class=\\\"configWidth\\\" appearance=\\\"outline\\\">\\n      <!--mat-label>Tick Value Max</mat-label-->\\n      <input matInput placeholder=\\\"Tick Value Max\\\" [(ngModel)]=\\\"config.gptChannelTickValueMax\\\" class=\\\"colorText\\\" readonly>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"configWidth\\\" appearance=\\\"outline\\\">\\n      <input matInput placeholder=\\\"Notification\\\" [(ngModel)]=\\\"config.gptNotification\\\" maxlength=\\\"30\\\"\\n        (keydown)=\\\"onGptNotificationKeydown($event)\\\">\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div>\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"configButtons\\\" (click)=\\\"addConfig(config)\\\"\\n      [disabled]=\\\"select1.empty || select2.empty || select3.empty || select4.empty\\\">Add</button>\\n  </div>\\n</div>\\n\\n\\n<!--- tabella per visualizzazione delle istanze di configurazione -->\\n<table mat-table [dataSource]=\\\"configurations\\\" id=\\\"configsTable\\\" *ngIf=\\\"enableTable\\\">\\n\\n  <!-- gptChannelID Column -->\\n  <ng-container matColumnDef=\\\"gptChannelID\\\">\\n    <th mat-header-cell *matHeaderCellDef> Channel ID </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.gptChannelID }} </td>\\n  </ng-container>\\n\\n  <!-- gptContainerHwChannel Column -->\\n  <ng-container matColumnDef=\\\"gptContainerHwChannel\\\">\\n    <th mat-header-cell *matHeaderCellDef> HW channel </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.gptContainerHwChannel }} </td>\\n  </ng-container>\\n\\n  <!-- gptContainerClockReference Column -->\\n  <ng-container matColumnDef=\\\"gptContainerClockReference\\\">\\n    <th mat-header-cell *matHeaderCellDef> Clock reference </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.gptContainerClockReference }} </td>\\n  </ng-container>\\n\\n  <!-- gptClockPrescaler Column -->\\n  <ng-container matColumnDef=\\\"gptClockPrescaler\\\">\\n    <th mat-header-cell *matHeaderCellDef> Clock prescaler </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.gptClockPrescaler }} </td>\\n  </ng-container>\\n\\n  <!-- gptChannelTickValueMax Column -->\\n  <ng-container matColumnDef=\\\"gptChannelTickValueMax\\\">\\n    <th mat-header-cell *matHeaderCellDef> Tick value max </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.gptChannelTickValueMax }} </td>\\n  </ng-container>\\n\\n  <!-- gptNotification Column -->\\n  <ng-container matColumnDef=\\\"gptNotification\\\">\\n    <th mat-header-cell *matHeaderCellDef> Notification </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.gptNotification }} </td>\\n  </ng-container>\\n\\n  <!-- deleteRow Column -->\\n  <ng-container matColumnDef=\\\"deleteRow\\\">\\n    <th mat-header-cell *matHeaderCellDef> Delete </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <mat-icon color=\\\"warn\\\" class=\\\"pointer\\\" (click)=\\\"deleteConfig(element)\\\"> clear </mat-icon>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\"","export default \"<div id=\\\"titleBar\\\">\\n    <div id=\\\"leftSideBar\\\" class=\\\"d-none d-sm-flex\\\">\\n        <div>\\n            <img src=\\\"assets/images/microWhite.png\\\" id=\\\"logoImage\\\">\\n        </div>\\n    </div>\\n    <div id=\\\"mainTitle\\\" class=\\\"colorTextLight centerText\\\">DIRDEM MONGOL DRIVER</div>\\n    <div id=\\\"rightSideBar\\\" class=\\\"d-none d-sm-flex\\\">\\n        <span id=\\\"versionSpan\\\" class=\\\"colorTextLight\\\">Version 0.0.0</span>\\n    </div>\\n</div>\\n\\n<div id=\\\"microSelection\\\">\\n    <h5 class=\\\"colorText centerText\\\">Please select one device to start</h5>\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Microcontroller</mat-label>\\n        <mat-select [(value)]=\\\"microcontroller\\\" (selectionChange)=\\\"onMicroSelected($event)\\\">\\n            <mat-option *ngFor=\\\"let micro of microcontrollers\\\" [value]=\\\"micro\\\">\\n                {{ micro.name }}\\n            </mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n</div>\\n\\n<!--div che compare solo dopo aver selezionato il microcontrollore-->\\n<div *ngIf=\\\"microcontroller.name\\\" class=\\\"row d-flex\\\" id=\\\"microContainer\\\">\\n    <div class=\\\"col-xl-1 verticalColSpacing\\\"></div>\\n    <div class=\\\"col-xl-3\\\">\\n        <mat-card class=\\\"backgroundLightPrimary infoCards\\\">\\n            <div class=\\\"cardTitle\\\">Technical specifications </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Name:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.name }} </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Family:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.family }} </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Brand:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.brand }} </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Datasheet:</div><a class=\\\"col-7 colorAccent\\\"\\n                    href=\\\"{{ microcontroller.datasheet }}\\\">-> Official datasheet</a>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Pins:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.pins }} </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Total timers:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.totalTimers }} </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Data bus:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.dataBus.size }}\\n                    {{ microcontroller.dataBus.measureUnit}} </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Eprom:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.eprom.size }} {{ microcontroller.eprom.measureUnit}}\\n                </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Flash:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.flash.size }} {{ microcontroller.flash.measureUnit}}\\n                </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Ram:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.ram.size }} {{ microcontroller.ram.measureUnit}}\\n                </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> SRam:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.sram.size }} {{ microcontroller.sram.measureUnit}}\\n                </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Internal oscillator:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.internalOscillator.value }}\\n                    {{ microcontroller.internalOscillator.measureUnit}}\\n                    {{ microcontroller.internalOscillator.material }} {{ microcontroller.internalOscillator.type}}\\n                </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Min voltage:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.minVoltage.value }}\\n                    {{ microcontroller.minVoltage.measureUnit }} </div>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-5\\\"> Max voltage:</div>\\n                <div class=\\\"col-7 colorPrimary\\\"> {{ microcontroller.maxVoltage.value }}\\n                    {{ microcontroller.maxVoltage.measureUnit }} </div>\\n            </div>\\n        </mat-card>\\n    </div>\\n    <div class=\\\"col-xl-1 verticalColSpacing\\\"></div>\\n    <div class=\\\"col-xl-2 d-flex align-items-center justify-content-center\\\">\\n        <img src=\\\"{{ microcontroller.imageSrc }}\\\" alt=\\\"{{ microcontroller.name }}\\\" (click)=\\\"showPinout()\\\"\\n            class=\\\"pointer\\\" matTooltip=\\\"Show pinout\\\" id=\\\"microImage\\\">\\n    </div>\\n    <div class=\\\"col-xl-1 verticalColSpacing\\\"></div>\\n    <div class=\\\"col-xl-2 d-flex flex-column justify-content-between\\\">\\n        <mat-card class=\\\"backgroundLightPrimary infoCards\\\">\\n            <div class=\\\"cardTitle\\\">Drivers </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-8\\\" [ngClass]=\\\"slider1.checked? 'colorAccent' : 'colorText'\\\"> GPT driver</div>\\n                <div class=\\\"col-2\\\">\\n                    <mat-slide-toggle #slider1 (change)=\\\"onGptDriverSwitched($event)\\\"></mat-slide-toggle>\\n                </div>\\n                <button mat-icon-button class=\\\"col-2\\\" [disabled]=\\\"!slider1.checked\\\" matTooltip=\\\"Edit\\\"\\n                    (click)=\\\"onGptDriverSwitched(null, true)\\\">\\n                    <mat-icon [ngClass]=\\\"slider1.checked? 'colorAccent' : 'colorText'\\\">edit</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-8\\\" [ngClass]=\\\"slider2.checked? 'colorAccent' : 'colorText'\\\"> PWM</div>\\n                <div class=\\\"col-2\\\">\\n                    <mat-slide-toggle #slider2></mat-slide-toggle>\\n                </div>\\n                <button mat-icon-button class=\\\"col-2\\\" [disabled]=\\\"!slider2.checked\\\" matTooltip=\\\"Edit\\\">\\n                    <mat-icon [ngClass]=\\\"slider2.checked? 'colorAccent' : 'colorText'\\\">edit</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-8\\\" [ngClass]=\\\"slider3.checked? 'colorAccent' : 'colorText'\\\"> Input / output</div>\\n                <div class=\\\"col-2\\\">\\n                    <mat-slide-toggle #slider3></mat-slide-toggle>\\n                </div>\\n                <button mat-icon-button class=\\\"col-2\\\" [disabled]=\\\"!slider3.checked\\\" matTooltip=\\\"Edit\\\">\\n                    <mat-icon [ngClass]=\\\"slider3.checked? 'colorAccent' : 'colorText'\\\">edit</mat-icon>\\n                </button>\\n            </div>\\n        </mat-card>\\n        <mat-card class=\\\"backgroundLightPrimary infoCards\\\">\\n            <div class=\\\"cardTitle\\\">Fuses</div>\\n            <div class=\\\"row d-flex align-items-center\\\">\\n                <div class=\\\"col-8\\\" [ngClass]=\\\"slider4.checked? 'colorAccent' : 'colorText'\\\"> <div *ngFor=\\\"let fuse of microcontroller.fuses\\\"> {{ fuse.type }} </div> </div>\\n                <div class=\\\"col-2\\\">\\n                    <mat-slide-toggle #slider4 (change)=\\\"onFuseSwitched($event)\\\"></mat-slide-toggle>\\n                </div>\\n                <button mat-icon-button class=\\\"col-2\\\" [disabled]=\\\"!slider4.checked\\\" matTooltip=\\\"Edit\\\"\\n                (click)=\\\"onFuseSwitched(null, true)\\\">\\n                    <mat-icon [ngClass]=\\\"slider4.checked? 'colorAccent' : 'colorText'\\\">edit</mat-icon>\\n                </button>\\n            </div>\\n        </mat-card>\\n    </div>\\n    <div class=\\\"col-xl-2\\\"></div>\\n\\n    <div id=\\\"generateConfigButtonDiv\\\">\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"generateGptFile()\\\" [disabled]=\\\"!thereAreGptConfigurations\\\" matTooltip=\\\"Generate configuration\\\">Mongol it!</button>\\n    </div>\\n</div>\\n\\n<!-- div contentente il file C da scaricare -->\\n<div id=\\\"cFileToDownload\\\">\\n      /*\\n      File: Gpt_Cfg.c\\n      */\\n\\n      /**************************************** INCLUDE FILES ****************************************/\\n      #include \\\"Arduino.h\\\"\\n      #include \\\"Gpt_Cfg.h\\\"\\n      /***********************************************************************************************/\\n\\n      #define CONFIGURED_CHANNELS 3\\n\\n      ConfigPtr Cfg[CONFIGURED_CHANNELS] =\\n      {{ '{' }}\\n    <div *ngFor=\\\"let config of gptConfigurations; last as isLast\\\">\\n\\n        {{'{'}}\\n          {{ config.gptChannelID }},\\n          {{ config.gptContainerHwChannel }},\\n          {{ config.gptContainerClockReference }},\\n          {{ config.gptClockPrescaler }},\\n          {{ config.gptChannelTickValueMax }},\\n          \\\"{{ config.gptNotification }}\\\"\\n        {{'}'}} <span *ngIf=\\\"!isLast\\\">,</span>\\n      </div>\\n      {{ '}' }}\\n</div>\\n\"","export default \"<img src=\\\"{{ data.pinoutImageSrc }}\\\" alt=\\\"{{ data.name }}\\\">\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'driver-config';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HomeComponent } from './components/home/home.component';\nimport { MicroPinoutDialogComponent } from './components/micro-pinout-dialog/micro-pinout-dialog.component';\nimport { FuseBitComponent } from './components/fuse-bit/fuse-bit.component';\nimport { GptCfgConfigComponent } from './components/gpt-config/gpt-config.component';\nimport { MaterialModule } from './modules/material/material.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GptCfgConfigComponent,\n    HomeComponent,\n    MicroPinoutDialogComponent,\n    FuseBitComponent\n  ],\n  entryComponents: [\n    MicroPinoutDialogComponent,\n    GptCfgConfigComponent,\n    FuseBitComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastrModule,\n    ToastrModule.forRoot() // ToastrModule added\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"#legendRow {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-align: start;\\r\\n            align-items: flex-start;\\r\\n    justify-content: space-around;\\r\\n    opacity: 0.6;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n#fuseTable {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.rowPadding {\\r\\n    padding-left: 24px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mdXNlLWJpdC9mdXNlLWJpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZnVzZS1iaXQvZnVzZS1iaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsZWdlbmRSb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICBvcGFjaXR5OiAwLjY7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbiNmdXNlVGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5yb3dQYWRkaW5nIHtcclxuICAgIHBhZGRpbmctbGVmdDogMjRweDtcclxufSJdfQ== */\"","import { Component, Inject, ChangeDetectorRef } from '@angular/core';\nimport { Fuse, FuseBit } from '../../../../../core/models/typeScript/FuseBit';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { ConverterUtilities } from '../../../../../core/models/typeScript/Utilities/ConverterUtilities';\nimport { DriverService } from 'src/app/services/driver.service';\nimport * as _ from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-fuse-bit',\n  templateUrl: './fuse-bit.component.html',\n  styleUrls: ['./fuse-bit.component.css']\n})\nexport class FuseBitComponent {\n  columns: FuseTableColumn[] = [];\n  displayedColumns: string[] = [];\n  dataSource: FuseBit[][] = [];\n\n  constructor(public dialogRef: MatDialogRef<FuseBitComponent>, private driverService: DriverService, private cd: ChangeDetectorRef,\n    private toastr: ToastrService, @Inject(MAT_DIALOG_DATA) public fuses: Fuse[]) {\n    // se già presente una configurazione viene caricata dai dati nel servizio\n    if (this.driverService.fuseBitConfiguration.length) {\n      this.dataSource = ConverterUtilities.matrixTranspose(this.driverService.fuseBitConfiguration.map(fuse => fuse.bits));\n    }\n    // altrimenti viene istanziata una nuova configurazioni con i dati di default passati dall'esterno (Microcontroller.ts)\n    else {\n      this.driverService.fuseBitConfiguration = _.cloneDeep(this.fuses);\n      const fuseMatrix: FuseBit[][] = this.driverService.fuseBitConfiguration.map(fuse => fuse.bits);\n      this.dataSource = ConverterUtilities.matrixTranspose(fuseMatrix);\n    }\n    // mappatura colonne\n    this.driverService.fuseBitConfiguration.forEach((fuse, i) => {\n      this.columns.push({ index: i, columnDef: fuse.type, header: fuse.type, footer: fuse.hexValue });\n      this.displayedColumns.push(fuse.type);\n    })\n  }\n\n  /**\n   * eventi \n   */\n  // click su checkbox di una singola cella\n  onCellClicked(fuseType: string, cell: FuseBit) {\n    // settaggio del singolo bit direttamente nella configurazione del servizio\n    var fuse: Fuse = this.driverService.fuseBitConfiguration.find(fuse => fuse.type == fuseType);\n    var bitToSet = fuse.bits.find(bit => bit.label == cell.label);\n    bitToSet.value = !bitToSet.value;\n    fuse.hexValue = ConverterUtilities.binaryToHex((fuse.bits.map(bit => bit.value)).reverse());\n    // svuotamento colonne\n    this.columns = [];\n    this.displayedColumns = [];\n    this.cd.detectChanges();\n    // nuovo riempimento per visualizzazione su interfaccia\n    this.driverService.fuseBitConfiguration.forEach((fuse, i) => {\n      this.columns.push({ index: i, columnDef: fuse.type, header: fuse.type, footer: fuse.hexValue });\n      this.displayedColumns.push(fuse.type);\n    })\n  }\n  // quando viene impostato il valore esadecimale del byte nel footer della colonna\n  onFooterChange(hexNumber: string, fuseType: string) {\n    let newBitsValue = ConverterUtilities.hexToBinaryArray(hexNumber).reverse();\n    let fuse: Fuse = this.driverService.fuseBitConfiguration.find(fuse => fuse.type == fuseType);\n    fuse.hexValue = hexNumber;\n    for (let i = 0; i < fuse.bits.length; i++) {\n      var newBitValue = newBitsValue[i];\n      fuse.bits[i].value = newBitValue;   // vengono cambiati i singoli bit nella configurazione del driverService         \n    }\n  }\n}\n\n\ninterface FuseTableColumn {\n  index: number;\n  columnDef: string;\n  header: string;     // intestazione della colonna\n  footer: string;     // valore esadecimale del byte\n}\n\n\n\n\n\n\n\n\n\n\n\n","export default \".configWidth {\\n    width: 200px;\\n}\\n\\n.configButtons {\\n    margin-top: 20px;\\n    margin-bottom: 50px;\\n}\\n\\n#configContainer >* {\\n    width: 70%;\\n    margin: auto;\\n    display: -webkit-box;\\n    display: flex;\\n    justify-content: space-around;\\n    -webkit-box-align: center;\\n            align-items: center;\\n}\\n\\n#mainTitle {\\n    margin: auto;\\n    width: -webkit-fit-content;\\n    width: -moz-fit-content;\\n    width: fit-content;\\n    -webkit-margin-before: 10px;\\n            margin-block-start: 10px;\\n    -webkit-margin-after: 50px;\\n            margin-block-end: 50px;\\n}\\n\\n#configsTable {\\n    width: 90%;\\n    margin: auto;\\n}\\n\\n#setConfigsDiv {\\n    width: 100%;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ncHQtY29uZmlnL2dwdC1jb25maWcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFlBQVk7SUFDWixvQkFBYTtJQUFiLGFBQWE7SUFDYiw2QkFBNkI7SUFDN0IseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWiwwQkFBa0I7SUFBbEIsdUJBQWtCO0lBQWxCLGtCQUFrQjtJQUNsQiwyQkFBd0I7WUFBeEIsd0JBQXdCO0lBQ3hCLDBCQUFzQjtZQUF0QixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ncHQtY29uZmlnL2dwdC1jb25maWcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb25maWdXaWR0aCB7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuXG4uY29uZmlnQnV0dG9ucyB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4jY29uZmlnQ29udGFpbmVyID4qIHtcbiAgICB3aWR0aDogNzAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbiNtYWluVGl0bGUge1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAxMHB4O1xuICAgIG1hcmdpbi1ibG9jay1lbmQ6IDUwcHg7XG59XG5cbiNjb25maWdzVGFibGUge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWFyZ2luOiBhdXRvO1xufVxuXG4jc2V0Q29uZmlnc0RpdiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbiJdfQ== */\"","import {\n  Component,\n  ViewChild,\n  Inject,\n  OnInit,\n  AfterViewInit,\n  AfterViewChecked\n} from \"@angular/core\";\nimport { ATmega328Values, GptDriverConfig } from \"../../../../../core/models/typeScript/GptDriver\";\nimport { MatSelect, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DriverService } from \"src/app/services/driver.service\";\nimport { ChangeDetectorRef } from \"@angular/core\";\n\n@Component({\n  selector: \"gpt-cfg\",\n  templateUrl: \"./gpt-config.component.html\",\n  styleUrls: [\"./gpt-config.component.css\"]\n})\nexport class GptCfgConfigComponent implements AfterViewInit {\n  @ViewChild(\"select1\", { static: false }) channelIdDropDown: MatSelect;\n  @ViewChild(\"select2\", { static: false }) hwChannelDropDown: MatSelect;\n  displayedColumns = [\n    \"gptChannelID\",\n    \"gptContainerHwChannel\",\n    \"gptContainerClockReference\",\n    \"gptClockPrescaler\",\n    \"gptChannelTickValueMax\",\n    \"gptNotification\",\n    \"deleteRow\"\n  ];\n\n\n  configurations: GptDriverConfig[];                                                // tutte le configurazioni istanziate / datasource della tabella\n  atMega328values = new ATmega328Values();                                          // per la visualizzazione dei menu a tendina\n  config = new GptDriverConfig();                                                   // singola configurazione\n  get enableTable() {\n    return this.configurations.length == 0 ? false : true;\n  }\n\n  constructor(\n    private driverService: DriverService,\n    private toastr: ToastrService,\n    private cdRef: ChangeDetectorRef,\n    public dialogRef: MatDialogRef<GptCfgConfigComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  )\n  { this.configurations = this.driverService.gptDriverConfiguration }\n\n  ngAfterViewInit() {\n    this._refreshDropDownAndTable();\n    this.cdRef.detectChanges();\n  }\n  /**************************\n   * funzioni pubbliche\n   **************************/\n  // aggiunge una nuova configurazione (nuova riga in tabella)\n  addConfig(config: GptDriverConfig) {\n    // inserimento nell'array delle configurazioni\n    let result = Object.assign({}, config);\n    this.driverService.gptDriverConfiguration.push(result);\n    this._refreshDropDownAndTable();\n  }\n  // cancella una configurazione (tasto X sulla tabella)\n  deleteConfig(config: GptDriverConfig) {\n      // rimozione configuraione dall'array configurazioni\n    let element = this.driverService.gptDriverConfiguration.find(\n      _ => _.gptContainerHwChannel == config.gptContainerHwChannel\n    );\n    let configIndex = this.driverService.gptDriverConfiguration.indexOf(element);\n    this.driverService.gptDriverConfiguration.splice(configIndex, 1);\n    this._refreshDropDownAndTable();\n  }\n  // sull'inserimento delle notification api (area di testo) per controllo caratteri\n  onGptNotificationKeydown(evt: KeyboardEvent) {\n    let keyPressed = evt.key;\n    if (DENIED_CHARS.includes(keyPressed)) {\n      this.toastr.warning(\"carattere \" + keyPressed + \" non permesso\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n  // scatenata quando cambia il valore della select del'hw channel - settaggio automatico del thick value max\n  onHwSelectionChange(evt: any) {\n    if (evt.value == this.atMega328values.gptContainerHwChannelValues[1]) {\n      this.config.gptChannelTickValueMax = this.atMega328values.gptChannelTickValues[1];\n    } else {\n      this.config.gptChannelTickValueMax = this.atMega328values.gptChannelTickValues[0];\n    }\n  }\n  // quando viene chiuso il popup per click esterno al componente\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  /**************************\n   * funzioni private\n   **************************/\n  // abilitazione/disabilitazione matSelect (dropdown) hwChannel e channelId e rendering della tabella\n  private _refreshDropDownAndTable() {\n    this.configurations = this.driverService.gptDriverConfiguration;\n    this.configurations = [...this.configurations]\n    this.channelIdDropDown.options.forEach(chId => {\n      chId.disabled = this.driverService.gptDriverConfiguration.find(config => {\n        return config.gptChannelID == chId.value;\n      })\n    });\n    this.hwChannelDropDown.options.forEach(chHw => {\n      chHw.disabled = this.driverService.gptDriverConfiguration.find(config => {\n        return config.gptContainerHwChannel == chHw.value;\n      })\n    });\n    this.hwChannelDropDown.value = null;\n    this.channelIdDropDown.value = null;\n  }\n}\n\n/****************************\n * costanti\n ****************************/\nconst DENIED_CHARS = '\\\\<>\"°£$%&/)(=^*§#]|[?!@,';\n","export default \".cardTitle {\\r\\n    font-size: 17px;\\r\\n    font-weight: 700 !important;\\r\\n    text-align: center !important;\\r\\n    margin-bottom: 15px !important;\\r\\n}\\r\\n\\r\\n#titleBar {\\r\\n    height: 90px;\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: justify;\\r\\n            justify-content: space-between;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n    background-color: var(--primary);\\r\\n}\\r\\n\\r\\n#logoImage {\\r\\n    width: 50px;\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n#mainTitle {\\r\\n    font-size: 40px;\\r\\n    -webkit-box-flex: 2;\\r\\n            flex: 2;\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n\\r\\n#rightSideBar {\\r\\n    -webkit-box-flex: 1;\\r\\n            flex: 1;\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: end;\\r\\n            justify-content: flex-end;\\r\\n}\\r\\n\\r\\n#leftSideBar {\\r\\n    -webkit-box-flex: 1;\\r\\n            flex: 1;\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: start;\\r\\n            justify-content: flex-start;\\r\\n}\\r\\n\\r\\n#versionSpan{\\r\\n    font-size: 12px;\\r\\n    margin-right: 15px;\\r\\n}\\r\\n\\r\\n#microSelection {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n#microContainer {\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n.infoCards {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n    min-width: 280px;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n#microImage:hover {\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n#generateConfigButtonDiv {\\r\\n    width: 100%;\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    margin-top: 5%;\\r\\n}\\r\\n\\r\\n#cFileToDownload {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZiwyQkFBMkI7SUFDM0IsNkJBQTZCO0lBQzdCLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixvQkFBYTtJQUFiLGFBQWE7SUFDYix5QkFBOEI7WUFBOUIsOEJBQThCO0lBQzlCLHlCQUFtQjtZQUFuQixtQkFBbUI7SUFDbkIsZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksV0FBVztJQUNYLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixtQkFBTztZQUFQLE9BQU87SUFDUCxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksbUJBQU87WUFBUCxPQUFPO0lBQ1Asb0JBQWE7SUFBYixhQUFhO0lBQ2IscUJBQXlCO1lBQXpCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLG1CQUFPO1lBQVAsT0FBTztJQUNQLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHVCQUEyQjtZQUEzQiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IsNEJBQXNCO0lBQXRCLDZCQUFzQjtZQUF0QixzQkFBc0I7SUFDdEIseUJBQW1CO1lBQW5CLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IsNEJBQXNCO0lBQXRCLDZCQUFzQjtZQUF0QixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2QixjQUFjO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkVGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMCAhaW1wb3J0YW50O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiN0aXRsZUJhciB7XHJcbiAgICBoZWlnaHQ6IDkwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnkpO1xyXG59XHJcblxyXG4jbG9nb0ltYWdlIHtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbn1cclxuXHJcbiNtYWluVGl0bGUge1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgZmxleDogMjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuI3JpZ2h0U2lkZUJhciB7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuXHJcbiNsZWZ0U2lkZUJhciB7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxufVxyXG5cclxuI3ZlcnNpb25TcGFue1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG59XHJcblxyXG4jbWljcm9TZWxlY3Rpb24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxufVxyXG5cclxuI21pY3JvQ29udGFpbmVyIHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbi5pbmZvQ2FyZHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtaW4td2lkdGg6IDI4MHB4O1xyXG4gICAgei1pbmRleDogMTtcclxufVxyXG5cclxuI21pY3JvSW1hZ2U6aG92ZXIge1xyXG4gICAgb3BhY2l0eTogMC43O1xyXG59XHJcblxyXG4jZ2VuZXJhdGVDb25maWdCdXR0b25EaXYge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiA1JTtcclxufVxyXG5cclxuI2NGaWxlVG9Eb3dubG9hZCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iXX0= */\"","import { FuseBitComponent } from '../fuse-bit/fuse-bit.component';\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Microcontroller } from \"../../../../../core/models/typeScript/Microcontroller\";\nimport {\n  MatDialog,\n  MatSlideToggleChange,\n  MatSlideToggle,\n  MatSelectChange\n} from \"@angular/material\";\nimport { MicroPinoutDialogComponent } from \"../micro-pinout-dialog/micro-pinout-dialog.component\";\nimport { GptCfgConfigComponent } from \"../gpt-config/gpt-config.component\";\nimport { DriverService } from \"src/app/services/driver.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent {\n  // proprietà che è vera se è presente almeno una configurazione del gpt (di qualsiasi tipo) nel driverService per abilitazione tasto wizard\n  get thereAreGptConfigurations(): boolean {\n    if (this.driverService.gptDriverConfiguration.length) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  get gptConfigurationsLength() {\n    return this.driverService.gptDriverConfiguration.length;\n  }\n  get fuseBitConfigurationLength() {\n    return this.driverService.fuseBitConfiguration.length;\n  }\n  // sliders\n  @ViewChild(\"slider1\", { static: false }) gptDriverSlider: MatSlideToggle;\n  @ViewChild(\"slider4\", { static: false }) fuseBitSlider: MatSlideToggle;\n  //\n  microcontroller = new Microcontroller();\n  microcontrollers: Microcontroller[];\n  // configurazioni da inserire nel div html che servirà per scaricare il file .C\n  gptConfigurations = this.driverService.gptDriverConfiguration;\n\n  constructor(\n    public dialog: MatDialog,\n    private driverService: DriverService,\n    private toast: ToastrService\n  ) { this.microcontrollers = Microcontroller.getMicrocontrollers() };\n\n  // evento scatenato sulla selezione di un nuovo micro\n  onMicroSelected(evt: MatSelectChange) {\n    this.driverService.clearAllConfigurations();\n    // il microcontroller viene assegnato con il binding sul template html\n    console.log(evt, this.microcontroller);    \n  }\n  // evento scatenato al passagio del mouse sopra l'immagine\n  showPinout() {\n    const dialogRef = this.dialog.open(MicroPinoutDialogComponent, {\n      data: this.microcontroller\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n  // genera il file di configurazione in base ai dati presenti nel driverService\n  generateGptFile() {\n    // file c da scaricare (contenuto dentro il div invisibile)\n    let cFile = document.getElementById(\"cFileToDownload\").innerText;\n    this.driverService.generateGptConfigFile(cFile);\n    this.toast.success(\"Download success!\");\n  }\n\n  /*\n   * eventi su tasti slider ** isEdit è passato true solo nel caso in cui vine premuto il tasto per la modifica\n   */\n  // su driver gpt //\n  onGptDriverSwitched(evt?: MatSlideToggleChange, isEdit?: boolean) {\n    // se lo slider virene acceso\n    if (isEdit || evt.checked) {\n      const dialogRef = this.dialog.open(GptCfgConfigComponent, {\n        width: \"920px\",\n        data: null\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (this.gptConfigurationsLength > 0) {\n          // se ci sono configurazioni nel driverService lascio abilitato lo slider, altrimenti lo spengo\n          this.gptDriverSlider.checked = true;\n        } else {\n          this.gptDriverSlider.checked = false;\n        }\n      });\n    }\n    // se lo slider viene spento svuoto le configurazioni del driverGpt\n    else {\n      this.driverService.gptDriverConfiguration = [];\n    }\n  }\n  // su fuse bit\n  onFuseSwitched(evt?: MatSlideToggleChange, isEdit?: boolean) {\n    if (isEdit || evt.checked) {\n      const dialogRef = this.dialog.open(FuseBitComponent, {\n        width: \"920px\",\n        data: this.microcontroller.fuses // passo al dialog le informazioni sui fuse bit\n      })\n      dialogRef.afterClosed().subscribe(result => {\n        if (this.fuseBitConfigurationLength) {\n          // se è stata fatta la configurazione dei fuse bit lascio acceso lo slider\n          this.fuseBitSlider.checked = true;\n        } else {\n          this.fuseBitSlider.checked = false;\n        }\n      })\n      // se lo slider viene spento svuoto le configurazioni dei fuse bit\n    } else {\n      this.driverService.fuseBitConfiguration = [];\n      // console.log(this.driverService.fuseBitConfiguration);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWljcm8tcGlub3V0LWRpYWxvZy9taWNyby1waW5vdXQtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Microcontroller } from '../../../../../core/models/typeScript/Microcontroller';\n\n@Component({\n  selector: 'app-micro-pinout-dialog',\n  templateUrl: './micro-pinout-dialog.component.html',\n  styleUrls: ['./micro-pinout-dialog.component.css']\n})\nexport class MicroPinoutDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<MicroPinoutDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Microcontroller) {}\n\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatTableModule,\n    MatTooltipModule,\n    CdkTableModule\n  ],\n  exports: [\n    CommonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatTableModule,\n    MatTooltipModule,\n    CdkTableModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { GptDriverConfig } from '../../../../core/models/typeScript/GptDriver';\nimport FileSaver = require('file-saver');\nimport { Fuse } from '../../../../core/models/typeScript/FuseBit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriverService {\n\n  /*\n   *  GPT DRIVER\n   */\n  gptDriverConfiguration: GptDriverConfig [] = [];\n  fuseBitConfiguration: Fuse [] = [];\n\n  constructor() { }\n\n  // scarica il Gpt_Cfg.C\n  generateGptConfigFile(cFile: string): void { // da trasformare in promise !!!\n    var blob = new Blob([cFile], { type: \"text/plain;charset=utf-8\" });\n    FileSaver.saveAs(blob, \"Gpt_Cfg.c\");\n  }\n\n  // svuota tutte le configurazioni\n  clearAllConfigurations(): void {\n    this.gptDriverConfiguration = [];\n    this.fuseBitConfiguration = [];\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}